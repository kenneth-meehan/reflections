When would you want to use a remote repository rather than keeping all your work
local?

    Several good reasons:
    The remote repo serves as a backup.
    The remote backup is now visible to others, both to peruse and to clone.
    Having a remote repo enables collaboration via pushes, pulls, and branching. 

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You probably want to limit traffic between remote and local repos.
	When working on you local machine, you might want to be editing what you last pulled,
	and not muck up the water by getting code updated by someone else.
	

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    You fork somebody's else's repo on github to create a copy for yourself, also on github.
		Forking increments the forking counter on the source repo,
		and establishes links should you want to later issue pull requests (I think).
	You clone a repo to make a copy without the accounting of forking.
		You can clone remote to local, or local to local.
	A single repo can have multiple branches, useful to isolate code for distinct features,
	either for yourself or--more powerfully--with collaborators.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    Fill in your answer here

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Fill in your answer here

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here
